// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"gitlab.com/kallepan/pcr-backend/app/controller"
	"gitlab.com/kallepan/pcr-backend/app/repository"
	"gitlab.com/kallepan/pcr-backend/app/service"
)

// Injectors from injector.go:

func Init() *Initialization {
	systemRepositoryImpl := repository.SystemRepositoryInit()
	systemServiceImpl := service.SystemServiceInit(systemRepositoryImpl)
	systemControllerImpl := controller.SystemControllerInit(systemServiceImpl)
	userRepositoryImpl := repository.UserRepositoryInit()
	userServiceImpl := service.UserServiceInit(userRepositoryImpl)
	userControllerImpl := controller.UserControllerInit(userServiceImpl)
	importRepositoryImpl := repository.ImportRepositoryInit()
	panelRepositoryImpl := repository.PanelRepositoryInit()
	importServiceImpl := service.ImportServiceInit(importRepositoryImpl, panelRepositoryImpl)
	importControllerImpl := controller.ImportControllerInit(importServiceImpl)
	printRepositoryImpl := repository.PrintRepositoryInit()
	printServiceImpl := service.PrintServiceInit(printRepositoryImpl)
	printControllerImpl := controller.PrintControllerInit(printServiceImpl)
	panelServiceImpl := service.PanelServiceInit(panelRepositoryImpl)
	panelControllerImpl := controller.PanelControllerInit(panelServiceImpl)
	sampleRepositoryImpl := repository.SampleRepositoryInit()
	sampleServiceImpl := service.SampleServiceInit(sampleRepositoryImpl)
	sampleControllerImpl := controller.SampleControllerInit(sampleServiceImpl)
	synchronizeRepositoryImpl := repository.SynchronizeRepositoryInit()
	samplePanelRepositoryImpl := repository.SamplePanelRepositoryInit()
	samplePanelServiceImpl := service.SamplePanelServiceInit(samplePanelRepositoryImpl, sampleRepositoryImpl, panelRepositoryImpl)
	runRepositoryImpl := repository.RunRepositoryInit()
	runServiceImpl := service.RunServiceInit(runRepositoryImpl, sampleRepositoryImpl, panelRepositoryImpl)
	samplePanelControllerImpl := controller.SamplePanelControllerInit(samplePanelServiceImpl, runServiceImpl)
	initialization := NewInitialization(systemRepositoryImpl, systemServiceImpl, systemControllerImpl, userRepositoryImpl, userServiceImpl, userControllerImpl, importRepositoryImpl, importServiceImpl, importControllerImpl, printRepositoryImpl, printServiceImpl, printControllerImpl, panelRepositoryImpl, panelServiceImpl, panelControllerImpl, sampleRepositoryImpl, sampleServiceImpl, sampleControllerImpl, synchronizeRepositoryImpl, samplePanelRepositoryImpl, samplePanelServiceImpl, samplePanelControllerImpl, runRepositoryImpl, runServiceImpl)
	return initialization
}

// injector.go:

/* System */
var (
	systemRepoSet  = wire.NewSet(repository.SystemRepositoryInit, wire.Bind(new(repository.SystemRepository), new(*repository.SystemRepositoryImpl)))
	systemSvcSet   = wire.NewSet(service.SystemServiceInit, wire.Bind(new(service.SystemService), new(*service.SystemServiceImpl)))
	systemCtrlrSet = wire.NewSet(controller.SystemControllerInit, wire.Bind(new(controller.SystemController), new(*controller.SystemControllerImpl)))
)

/* User */
var (
	userRepoSet  = wire.NewSet(repository.UserRepositoryInit, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)))
	userSvcSet   = wire.NewSet(service.UserServiceInit, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)))
	userCtrlrSet = wire.NewSet(controller.UserControllerInit, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))
)

/* Import */
var (
	importRepoSet  = wire.NewSet(repository.ImportRepositoryInit, wire.Bind(new(repository.ImportRepository), new(*repository.ImportRepositoryImpl)))
	importSvcSet   = wire.NewSet(service.ImportServiceInit, wire.Bind(new(service.ImportService), new(*service.ImportServiceImpl)))
	importCtrlrSet = wire.NewSet(controller.ImportControllerInit, wire.Bind(new(controller.ImportController), new(*controller.ImportControllerImpl)))
)

/* Print */
var (
	printRepoSet  = wire.NewSet(repository.PrintRepositoryInit, wire.Bind(new(repository.PrintRepository), new(*repository.PrintRepositoryImpl)))
	printSvcSet   = wire.NewSet(service.PrintServiceInit, wire.Bind(new(service.PrintService), new(*service.PrintServiceImpl)))
	printCtrlrSet = wire.NewSet(controller.PrintControllerInit, wire.Bind(new(controller.PrintController), new(*controller.PrintControllerImpl)))
)

/* Panel */
var (
	panelRepoSet  = wire.NewSet(repository.PanelRepositoryInit, wire.Bind(new(repository.PanelRepository), new(*repository.PanelRepositoryImpl)))
	panelSvcSet   = wire.NewSet(service.PanelServiceInit, wire.Bind(new(service.PanelService), new(*service.PanelServiceImpl)))
	panelCtrlrSet = wire.NewSet(controller.PanelControllerInit, wire.Bind(new(controller.PanelController), new(*controller.PanelControllerImpl)))
)

/* Sample */
var (
	sampleRepoSet  = wire.NewSet(repository.SampleRepositoryInit, wire.Bind(new(repository.SampleRepository), new(*repository.SampleRepositoryImpl)))
	sampleSvcSet   = wire.NewSet(service.SampleServiceInit, wire.Bind(new(service.SampleService), new(*service.SampleServiceImpl)))
	sampleCtrlrSet = wire.NewSet(controller.SampleControllerInit, wire.Bind(new(controller.SampleController), new(*controller.SampleControllerImpl)))
)

/* Synchronize */
var (
	synchronizeRepoSet = wire.NewSet(repository.SynchronizeRepositoryInit, wire.Bind(new(repository.SynchronizeRepository), new(*repository.SynchronizeRepositoryImpl)))
)

/* SamplePanel */
var (
	samplePanelRepoSet  = wire.NewSet(repository.SamplePanelRepositoryInit, wire.Bind(new(repository.SamplePanelRepository), new(*repository.SamplePanelRepositoryImpl)))
	samplePanelSvcSet   = wire.NewSet(service.SamplePanelServiceInit, wire.Bind(new(service.SamplePanelService), new(*service.SamplePanelServiceImpl)))
	samplePanelCtrlrSet = wire.NewSet(controller.SamplePanelControllerInit, wire.Bind(new(controller.SamplePanelController), new(*controller.SamplePanelControllerImpl)))
)

/* Run */
var (
	runRepoSet = wire.NewSet(repository.RunRepositoryInit, wire.Bind(new(repository.RunRepository), new(*repository.RunRepositoryImpl)))
	runSvcSet  = wire.NewSet(service.RunServiceInit, wire.Bind(new(service.RunService), new(*service.RunServiceImpl)))
)
