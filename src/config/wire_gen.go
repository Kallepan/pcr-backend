// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"gitlab.com/kallepan/pcr-backend/app/controller"
	"gitlab.com/kallepan/pcr-backend/app/repository"
	"gitlab.com/kallepan/pcr-backend/app/service"
)

// Injectors from injector.go:

func Init() *Initialization {
	systemRepositoryImpl := repository.SystemRepositoryInit()
	systemServiceImpl := service.SystemServiceInit(systemRepositoryImpl)
	systemControllerImpl := controller.SystemControllerInit(systemServiceImpl)
	userRepositoryImpl := repository.UserRepositoryInit()
	userServiceImpl := service.UserServiceInit(userRepositoryImpl)
	userControllerImpl := controller.UserControllerInit(userServiceImpl)
	importRepositoryImpl := repository.ImportRepositoryInit()
	importServiceImpl := service.ImportServiceInit(importRepositoryImpl)
	importControllerImpl := controller.ImportControllerInit(importServiceImpl)
	printRepositoryImpl := repository.PrintRepositoryInit()
	printServiceImpl := service.PrintServiceInit(printRepositoryImpl)
	printControllerImpl := controller.PrintControllerInit(printServiceImpl)
	initialization := NewInitialization(systemRepositoryImpl, systemServiceImpl, systemControllerImpl, userRepositoryImpl, userServiceImpl, userControllerImpl, importRepositoryImpl, importServiceImpl, importControllerImpl, printRepositoryImpl, printServiceImpl, printControllerImpl)
	return initialization
}

// injector.go:

/* System */
var (
	systemRepoSet  = wire.NewSet(repository.SystemRepositoryInit, wire.Bind(new(repository.SystemRepository), new(*repository.SystemRepositoryImpl)))
	systemSvcSet   = wire.NewSet(service.SystemServiceInit, wire.Bind(new(service.SystemService), new(*service.SystemServiceImpl)))
	systemCtrlrSet = wire.NewSet(controller.SystemControllerInit, wire.Bind(new(controller.SystemController), new(*controller.SystemControllerImpl)))
)

/* User */
var (
	userRepoSet  = wire.NewSet(repository.UserRepositoryInit, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)))
	userSvcSet   = wire.NewSet(service.UserServiceInit, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)))
	userCtrlrSet = wire.NewSet(controller.UserControllerInit, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))
)

/* Import */
var (
	importRepoSet  = wire.NewSet(repository.ImportRepositoryInit, wire.Bind(new(repository.ImportRepository), new(*repository.ImportRepositoryImpl)))
	importSvcSet   = wire.NewSet(service.ImportServiceInit, wire.Bind(new(service.ImportService), new(*service.ImportServiceImpl)))
	importCtrlrSet = wire.NewSet(controller.ImportControllerInit, wire.Bind(new(controller.ImportController), new(*controller.ImportControllerImpl)))
)

/* Print */
var (
	printRepoSet  = wire.NewSet(repository.PrintRepositoryInit, wire.Bind(new(repository.PrintRepository), new(*repository.PrintRepositoryImpl)))
	printSvcSet   = wire.NewSet(service.PrintServiceInit, wire.Bind(new(service.PrintService), new(*service.PrintServiceImpl)))
	printCtrlrSet = wire.NewSet(controller.PrintControllerInit, wire.Bind(new(controller.PrintController), new(*controller.PrintControllerImpl)))
)
